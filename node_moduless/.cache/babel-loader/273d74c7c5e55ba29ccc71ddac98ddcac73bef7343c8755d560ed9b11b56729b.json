{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aluno\\\\OneDrive - SENAC - SP\\\\Documentos\\\\ethopay\\\\ethopay_app\\\\src\\\\componentes\\\\titulo2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Style from './titulo2.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingEffect = () => {\n  _s();\n  const [text, setText] = useState('');\n  const fullText = 'Texto que parece estar sendo digitado...';\n  const typingSpeed = 50; // Velocidade de digitação (em milissegundos)\n  const [isInView, setIsInView] = useState(false);\n  const elementRef = useRef(null);\n  useEffect(() => {\n    if (isInView) {\n      const typingInterval = setInterval(() => {\n        const currentIndex = text.length;\n        if (currentIndex < fullText.length) {\n          setText(fullText.substring(0, currentIndex + 1));\n        } else {\n          clearInterval(typingInterval);\n        }\n      }, typingSpeed);\n      return () => {\n        clearInterval(typingInterval);\n      };\n    }\n  }, [text, isInView]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setIsInView(true);\n        observer.disconnect();\n      }\n    }, {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.5 // Ajuste o limite conforme necessário\n    });\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n    return () => {\n      if (elementRef.current) {\n        observer.unobserve(elementRef.current);\n      }\n    };\n  }, [elementRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elementRef,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingEffect, \"J+Rz730p5orvs0n+equfFODGVZc=\");\n_c = TypingEffect;\nexport default TypingEffect;\nvar _c;\n$RefreshReg$(_c, \"TypingEffect\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Style","jsxDEV","_jsxDEV","TypingEffect","_s","text","setText","fullText","typingSpeed","isInView","setIsInView","elementRef","typingInterval","setInterval","currentIndex","length","substring","clearInterval","observer","IntersectionObserver","entries","isIntersecting","disconnect","root","rootMargin","threshold","current","observe","unobserve","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aluno/OneDrive - SENAC - SP/Documentos/ethopay/ethopay_app/src/componentes/titulo2.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Style from './titulo2.module.css'\r\n\r\nconst TypingEffect = () => {\r\n  const [text, setText] = useState('');\r\n  const fullText = 'Texto que parece estar sendo digitado...';\r\n  const typingSpeed = 50; // Velocidade de digitação (em milissegundos)\r\n  const [isInView, setIsInView] = useState(false);\r\n  const elementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      const typingInterval = setInterval(() => {\r\n        const currentIndex = text.length;\r\n        if (currentIndex < fullText.length) {\r\n          setText(fullText.substring(0, currentIndex + 1));\r\n        } else {\r\n          clearInterval(typingInterval);\r\n        }\r\n      }, typingSpeed);\r\n\r\n      return () => {\r\n        clearInterval(typingInterval);\r\n      };\r\n    }\r\n  }, [text, isInView]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setIsInView(true);\r\n          observer.disconnect();\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 0.5, // Ajuste o limite conforme necessário\r\n      }\r\n    );\r\n\r\n    if (elementRef.current) {\r\n      observer.observe(elementRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (elementRef.current) {\r\n        observer.unobserve(elementRef.current);\r\n      }\r\n    };\r\n  }, [elementRef]);\r\n\r\n  return (\r\n    <div ref={elementRef}>\r\n      <h1>{text}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingEffect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,QAAQ,GAAG,0CAA0C;EAC3D,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMc,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZ,MAAMG,cAAc,GAAGC,WAAW,CAAC,MAAM;QACvC,MAAMC,YAAY,GAAGT,IAAI,CAACU,MAAM;QAChC,IAAID,YAAY,GAAGP,QAAQ,CAACQ,MAAM,EAAE;UAClCT,OAAO,CAACC,QAAQ,CAACS,SAAS,CAAC,CAAC,EAAEF,YAAY,GAAG,CAAC,CAAC,CAAC;QAClD,CAAC,MAAM;UACLG,aAAa,CAACL,cAAc,CAAC;QAC/B;MACF,CAAC,EAAEJ,WAAW,CAAC;MAEf,OAAO,MAAM;QACXS,aAAa,CAACL,cAAc,CAAC;MAC/B,CAAC;IACH;EACF,CAAC,EAAE,CAACP,IAAI,EAAEI,QAAQ,CAAC,CAAC;EAEpBX,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE;QAC7BX,WAAW,CAAC,IAAI,CAAC;QACjBQ,QAAQ,CAACI,UAAU,CAAC,CAAC;MACvB;IACF,CAAC,EACD;MACEC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,GAAG,CAAE;IAClB,CACF,CAAC;;IAED,IAAId,UAAU,CAACe,OAAO,EAAE;MACtBR,QAAQ,CAACS,OAAO,CAAChB,UAAU,CAACe,OAAO,CAAC;IACtC;IAEA,OAAO,MAAM;MACX,IAAIf,UAAU,CAACe,OAAO,EAAE;QACtBR,QAAQ,CAACU,SAAS,CAACjB,UAAU,CAACe,OAAO,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,CAACf,UAAU,CAAC,CAAC;EAEhB,oBACET,OAAA;IAAK2B,GAAG,EAAElB,UAAW;IAAAmB,QAAA,eACnB5B,OAAA;MAAA4B,QAAA,EAAKzB;IAAI;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAvDID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyDlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}