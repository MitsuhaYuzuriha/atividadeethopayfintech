{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aluno\\\\OneDrive - SENAC - SP\\\\Documentos\\\\ethopay\\\\ethopay_app\\\\src\\\\componentes\\\\titulo.js\";\nimport React, { Component } from 'react';\nimport Style from './Titulo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TextScramble {\n  constructor(el) {\n    this.el = el;\n    this.chars = '!<>-_\\\\/[]{}—=+*^?#________';\n    this.update = this.update.bind(this);\n  }\n  setText(newText) {\n    const oldText = this.el.innerText;\n    const length = Math.max(oldText.length, newText.length);\n    const promise = new Promise(resolve => this.resolve = resolve);\n    this.queue = [];\n    for (let i = 0; i < length; i++) {\n      const from = oldText[i] || '';\n      const to = newText[i] || '';\n      const start = Math.floor(Math.random() * 40);\n      const end = start + Math.floor(Math.random() * 40);\n      this.queue.push({\n        from,\n        to,\n        start,\n        end\n      });\n    }\n    cancelAnimationFrame(this.frameRequest);\n    this.frame = 0;\n    this.update();\n    return promise;\n  }\n  update() {\n    let output = '';\n    let complete = 0;\n    for (let i = 0, n = this.queue.length; i < n; i++) {\n      let {\n        from,\n        to,\n        start,\n        end,\n        char\n      } = this.queue[i];\n      if (this.frame >= end) {\n        complete++;\n        output += to;\n      } else if (this.frame >= start) {\n        if (!char || Math.random() < 0.28) {\n          char = this.randomChar();\n          this.queue[i].char = char;\n        }\n        output += `<span class=\"dud\">${char}</span>`;\n      } else {\n        output += from;\n      }\n    }\n    this.el.innerHTML = output;\n    if (complete === this.queue.length) {\n      this.resolve();\n    } else {\n      this.frameRequest = requestAnimationFrame(this.update);\n      this.frame++;\n    }\n  }\n  randomChar() {\n    return this.chars[Math.floor(Math.random() * this.chars.length)];\n  }\n}\nclass TextAnimation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phrases: ['vem fazer', 'parte', 'do futuro', 'vem de', '€thopay'],\n      counter: 0\n    };\n  }\n  componentDidMount() {\n    this.next();\n  }\n  next() {\n    const {\n      phrases,\n      counter\n    } = this.state;\n    const el = this.refs.textElement; // Ref para o elemento HTML\n    const fx = new TextScramble(el);\n    fx.setText(phrases[counter]).then(() => {\n      setTimeout(this.next.bind(this), 800);\n    });\n    this.setState({\n      counter: (counter + 1) % phrases.length\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: \"textElement\",\n        className: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TextAnimation;","map":{"version":3,"names":["React","Component","Style","jsxDEV","_jsxDEV","TextScramble","constructor","el","chars","update","bind","setText","newText","oldText","innerText","length","Math","max","promise","Promise","resolve","queue","i","from","to","start","floor","random","end","push","cancelAnimationFrame","frameRequest","frame","output","complete","n","char","randomChar","innerHTML","requestAnimationFrame","TextAnimation","props","state","phrases","counter","componentDidMount","next","refs","textElement","fx","then","setTimeout","setState","render","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Aluno/OneDrive - SENAC - SP/Documentos/ethopay/ethopay_app/src/componentes/titulo.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Style from './Titulo.module.css'\r\n\r\nclass TextScramble {\r\n  constructor(el) {\r\n    this.el = el;\r\n    this.chars = '!<>-_\\\\/[]{}—=+*^?#________';\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  setText(newText) {\r\n    const oldText = this.el.innerText;\r\n    const length = Math.max(oldText.length, newText.length);\r\n    const promise = new Promise((resolve) => (this.resolve = resolve));\r\n    this.queue = [];\r\n    for (let i = 0; i < length; i++) {\r\n      const from = oldText[i] || '';\r\n      const to = newText[i] || '';\r\n      const start = Math.floor(Math.random() * 40);\r\n      const end = start + Math.floor(Math.random() * 40);\r\n      this.queue.push({ from, to, start, end });\r\n    }\r\n    cancelAnimationFrame(this.frameRequest);\r\n    this.frame = 0;\r\n    this.update();\r\n    return promise;\r\n  }\r\n\r\n  update() {\r\n    let output = '';\r\n    let complete = 0;\r\n    for (let i = 0, n = this.queue.length; i < n; i++) {\r\n      let { from, to, start, end, char } = this.queue[i];\r\n      if (this.frame >= end) {\r\n        complete++;\r\n        output += to;\r\n      } else if (this.frame >= start) {\r\n        if (!char || Math.random() < 0.28) {\r\n          char = this.randomChar();\r\n          this.queue[i].char = char;\r\n        }\r\n        output += `<span class=\"dud\">${char}</span>`;\r\n      } else {\r\n        output += from;\r\n      }\r\n    }\r\n    this.el.innerHTML = output;\r\n    if (complete === this.queue.length) {\r\n      this.resolve();\r\n    } else {\r\n      this.frameRequest = requestAnimationFrame(this.update);\r\n      this.frame++;\r\n    }\r\n  }\r\n\r\n  randomChar() {\r\n    return this.chars[Math.floor(Math.random() * this.chars.length)];\r\n  }\r\n}\r\n\r\nclass TextAnimation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      phrases: ['vem fazer', 'parte', 'do futuro', 'vem de', '€thopay'],\r\n      counter: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.next();\r\n  }\r\n\r\n  next() {\r\n    const { phrases, counter } = this.state;\r\n    const el = this.refs.textElement; // Ref para o elemento HTML\r\n    const fx = new TextScramble(el);\r\n\r\n    fx.setText(phrases[counter]).then(() => {\r\n      setTimeout(this.next.bind(this), 800);\r\n    });\r\n\r\n    this.setState({\r\n      counter: (counter + 1) % phrases.length,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div ref=\"textElement\" className=\"text\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextAnimation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}